name: CI
on:
  pull_request:
  merge_group:
  push:
    branches:
      - master
      - renovate/*
    tags:
      - "v*"

concurrency:
  group: tests-${{ format('{0}-{1}', github.head_ref || github.run_number, github.job) }}
  cancel-in-progress: true

jobs:
  environments:
    env:
      GH_TOKEN: ${{ secrets.REPO_TOKEN }}
    name: "Environments"
    runs-on: ubuntu-20.04
    outputs:
      environments: ${{ steps.matches.outputs.environments }}
    steps:
      - uses: actions/checkout@v3
      - run: |
          echo environments=$(gh api /repos/{owner}/{repo}/environments -q  '[ .environments | .[] | .name ] ' ) >> $GITHUB_OUTPUT
        shell: bash
        id: matches
  client-unit-test:
    name: "Client / Unit Test"
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: yarn
          cache-dependency-path: client/yarn.lock
      - run: cd client && yarn install
      - run: cd client && yarn test:unit:ci
  build-images:
    name: "Build"
    runs-on: ubuntu-20.04
    outputs:
      version: ${{ steps.build-image.outputs.version }}
      tags: ${{ steps.build-image.outputs.tags }}
      tag_count: ${{ steps.build-image.outputs.tag_count }}
    steps:
      - uses: actions/checkout@v3
      - name: Login to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: ./.github/actions/build-image
        id: build-image
        name: Build Image
  backend-unit-test:
    name: Backend / Unit Test
    needs: [build-images]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Build Info
        run: |
          echo "VERSION: ${{ needs.build-images.outputs.version}}"
          echo "TAGS: ${{ needs.build-images.outputs.tags}}"
          echo "COUNT: ${{ needs.build-images.outputs.tag_count}}"
        shell: bash
      - name: Start Stack
        uses: ./.github/actions/start-stack
        with:
          version: ${{ needs.build-images.outputs.version }}
      - run: docker compose exec -T phpfpm ./artisan test
        name: Run Unit Test
      - run: docker compose down
        name: Stop Stack
  # e2e:
  #   name: "E2E Test"
  #   needs: [build-images]
  #   uses: ./.github/workflows/do-test-e2e.yml
  #   secrets: inherit
  #   with:
  #     version: ${{ needs.build-images.outputs.version }}
  lint-php:
    name: PHP Lint
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: composer install
      - name: Check PHP
        run: composer lint
  lint-js:
    name: JS Lint
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ./client
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: yarn
          cache-dependency-path: client/yarn.lock
      - name: Install dependencies
        run: yarn
      - name: Check JS
        run: yarn lint
  lint-md:
    name: MD Lint
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: yarn
          cache-dependency-path: yarn.lock
      - name: Install dependencies
        run: yarn install
      - name: Check MD
        run: yarn lint:md
  publish:
    name: "Publish (master branch only)"
    runs-on: ubuntu-20.04
    needs: [build-images, backend-unit-test, client-unit-test]
    if: needs.build-images.outputs.tag_count > 1
    steps:
      - uses: actions/checkout@v3
      - name: Login to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: ./.github/actions/build-image
        with:
          target: release
  deployments:
    runs-on: ubuntu-20.04
    needs:
      - environments
      - publish
    name: "Deploy"
    environment:
      name:  ${{ matrix.environment }}
      url: ${{ vars.URL }}
    strategy:
      fail-fast: false
      matrix:
        environment: ${{ fromJson(needs.environments.outputs.environments) }}
    steps:
      - uses: actions/checkout@v3
      - run: |
          curl -X POST -H 'Authorization: Bearer ${{ secrets.DEPLOY_KEY}}' ${{ secrets.DEPLOY_URL }}
        shell: bash
